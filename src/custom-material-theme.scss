@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// below defines your custom color to build a theme palette from
$my-blue: (
  50: #FFF3E0,
  100: #FFE0B3,
  200: #FFCC80,
  300: #FFB84D,
  400: #FFA826,
  500: #FF9900,
  600: #FF9100,
  700: #FF8600,
  800: #FF7C00,
  900: #FF6B00,
  A100: #FFFFFF,
  A200: #FFF7F2,
  A400: #FFD6BF,
  A700: #FFC6A6,
  contrast: (
    50: #3c3a37,
    100: #3c3a37,
    200: #3c3a37,
    300: #3c3a37,
    400: #3c3a37,
    500: #3c3a37,
    600: #3c3a37,
    700: #3c3a37,
    800: #3c3a37,
    900: #3c3a37,
    A100: #3c3a37,
    A200: #3c3a37,
    A400: #3c3a37,
    A700: #3c3a37,
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$candy-app-primary: mat-palette($my-blue);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);